// This is -*- c++ -*- C++23 in the stylings of S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
// See the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
#import tests.unit.drrs.Record.declaration
namespace tests::unit::drrs { template<> class Record<dns::PTR>; }
#endiv
#divert <hpp>
#import tunitas.scarpet.drrs.Record.PTR
namespace tests::unit::drrs {
  template<> struct Record<dns::PTR> : public cppunit::test::Fixture {
    using Subject = ::tunitas::scarpet::drrs::Record<dns::PTR>;
    auto test_constructor_default() -> void;
    static auto suite() -> cppunit::Test *;
  };
}
#endiv
#divert <cpp>
namespace tests::unit::drrs {
  auto Record<dns::PTR>::test_constructor_default() -> void {
    Subject subject;
    CPPUNIT_ASSERT(sizeof (subject));
  }
}
auto tests::unit::drrs::Record<tests::unit::drrs::dns::PTR>::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series{"Record<PTR>"};
  series << call("constructor_default", &Record::test_constructor_default)
    ;
  return finalize(series);
}
#endiv
