// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
namespace tunitas::scarpet::pki::key {
  //
  // A key pair
  //
  // Usage:
  //
  //   auto pare = Pair{};
  //   auto pare = generate<Pair>();
  //   auto pare = Pair{Privat{...}, Publik{...}};
  //   auto pare = Pair{Privat{Buffer{...data..., ...size...}}, Publik{Buffer{...data..., ...size...}}};
  //   auto s = to_string(pare);
  //   to_stream(cout, pare);
  //
  class Pair;
}
#endiv
#divert <hpp>
#import std.pair
#import tunitas.scarpet.pki.key.Privat
#import tunitas.scarpet.pki.key.Publik
class tunitas::scarpet::pki::key::Pair : private std::pair<Privat, Publik> {
  using Ancestor = std::pair<Privat, Publik>;
public:
  Pair() = default;
  using Ancestor::pair;
  inline auto privat() -> Privat & { return first; }
  inline auto privat() const -> Privat const & { return first; }
  inline auto publik() -> Publik & { return second; }
  inline auto publik() const -> Publik const & { return second; }
};
#endiv
