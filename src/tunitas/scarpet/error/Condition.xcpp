// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::scarpet::error {
  //
  // The simplified condition
  //
  // Usage:
  //
  //   oh come on.  It's just an enum.
  //
  enum class Condition { SUCCESS, FAILURE };
}
#import std.is_error_condition_enum
namespace std {
  template<> struct is_error_condition_enum<tunitas::scarpet::error::Condition>;
}
#endiv
#divert <hpp>
#import std.true_type
template<> struct std::is_error_condition_enum<tunitas::scarpet::error::Condition> : public std::true_type { };
#import std.error_condition
namespace tunitas::scarpet::error {
  inline auto make_error_condition(Condition) -> std::error_condition;
}
#endiv
#divert <ipp>
#import tunitas.scarpet.error.category
namespace tunitas::scarpet {
  auto error::make_error_condition(Condition condition) -> std::error_condition {
    return std::error_condition{(int) condition, category()};
  }
}
#endiv
