// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::scarpet::drrs::flat::record {
  //
  // The left-hand side of a drrs::flat::Record<TYPE>
  // Descendants only.
  // Contains
  //   labels     e.g. example.storage.scarpet.tunitas.solutions.
  //   TTL        e.g. 1800 (seconds)
  //   CLASS      e.g. IN   (INternet)
  //
  // The right side is the drrs::Record<TYPE>
  // Contains
  //  TYPE
  //  ...RR-specific fields...
  //
  // Separately the drrs::flat::Record<TYPE> contains both (left and right sides).
  //
  // Usage: by inheritance in flat::Record<TYPE>
  //
  class Leftside;
}
#endiv
#divert <hpp>
#import std.chrono.duration
#import tunitas.scarpet.dns.Labels
#import tunitas.time.Duration
#import ares.dns.Class
#import ares.dns.class.constants
class tunitas::scarpet::drrs::flat::record::Leftside {
protected:
  ~Leftside() = default;
  inline Leftside();
  inline explicit Leftside(dns::Labels labels);
public:
  dns::Labels labels;
  struct defaults {
    inline static auto TTL = 600s;
    inline static auto CLASS = dns::IN;
  };
  time::Duration ttl;
  dns::Class classs;
};
#endiv
#divert <ipp>
#import std.move
namespace tunitas::scarpet::drrs::flat::record {
  Leftside::Leftside()
    : labels{}
    , ttl{defaults::TTL}
    , classs{defaults::CLASS}
  { }
  Leftside::Leftside(dns::Labels labels)
    : labels{std::move(labels)}
    , ttl{defaults::TTL}
    , classs{defaults::CLASS}
  { }
}
#endiv
