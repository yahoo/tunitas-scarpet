// This is -*- c++ -*- C++2a in the stylings of S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::scarpet { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::scarpet::Fixture : public cppunit::test::Fixture {
public:
  auto test_Program() -> void;
  auto test_Configuration() -> void;
  static auto suite() -> cppunit::Test *;
protected:
  struct Configuration;
};
#endiv
#divert <cpp>
#import tunitas.scarpet.Program
auto tests::unit::scarpet::Fixture::test_Program() -> void {
  auto program = tunitas::scarpet::Program{"a.out"};
  CPPUNIT_ASSERT(0 != program.size());
}
#import tests.unit.scarpet.Fixture.Configuration
auto tests::unit::scarpet::Fixture::test_Configuration() -> void {
  auto program = tunitas::scarpet::Program{"a.out"};
  auto cfg = Configuration{program};
  CPPUNIT_ASSERT(!cfg.debug_mode);
  cfg.warning_mode = true;
  CPPUNIT_ASSERT(cfg.warning_mode);
}
#import rigging.suite.io
auto tests::unit::scarpet::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("scarpet");
  series << call("Program", &Fixture::test_Program)
         << call("Configuration", &Fixture::test_Configuration)
    ;
  return finalize(series);
}
#endiv
