// This is -*- c++ -*- C++23 in the stylings of S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
// See the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
#import tunitas.scarpet.did.Document.declaration
namespace tunitas::scarpet::did {
  //
  // The DID Document is represented as a JSON Object.
  //
  // Usage:
  //
  //   see tunitas.scarpet.compile.DOME.JSON
  //
  template<> class Document<JSON>;
}
#endiv
#divert <hpp>
#import json.Value
#import std.ostream
#import tunitas.scarpet.did.document.aspect.Visitable
namespace tunitas::scarpet::did {
  template<> class Document<JSON> : public document::Prototype, public document::aspect::Visitable<json::Value, document::CONSTIE> {
    struct Ancestors {
      using Prototype = document::Prototype;
      using Visitable = document::aspect::Visitable<json::Value, document::CONSTIE>;
    };
  public:
    Document() = default;
    json::Value object;
    inline auto dump(std::ostream &) const -> void override final;
    inline auto visit(Visitor &) const -> void override;
  };
}
#endiv
#divert <ipp>
#import tunitas.scarpet.did.document.json.Pretty
namespace tunitas::scarpet::did {
  auto Document<JSON>::visit(Visitor &acceptor) const -> void { acceptor.accept(this->object); }
  auto Document<JSON>::dump(std::ostream &outbound) const -> void {
    auto state = document::json::Pretty{outbound};
    this->visit(state);
  }
}

#endiv
