// This is -*- c++ -*- C++2a in the stylings of S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
//
// Parser - provide a descendant for the generalist one.
//
#include <hpp/tests.unit.options.Fixture>
#endiv
#divert <hpp>
#import app.options.Parser
#import app.Configuration
#import app.options.Specification
namespace tests::unit::options {
  class Fixture::Parser : public ::app::options::Parser {
    using Ancestor = ::app::options::Parser;
  public:
    struct Configuration : public ::app::Configuration {
      inline explicit Configuration(Program const &p) : ::app::Configuration{p} { }
    };
    class Specification : public ::app::options::Specification {
      using Ancestor = ::app::options::Specification;
    public:
      Specification();
    };
    Parser(Specification const &, Configuration &);
  protected:
    Configuration &cfg;
  };
}
#endiv
#divert <cpp>
#import tunitas.application.options.argument.constants
#import tunitas.application.options.indicator.constants
namespace tests::unit::options {
  Fixture::Parser::Parser(Specification const &spc, Configuration &cfg)
    : Ancestor{spc}
    , cfg{cfg}
  { }
  Fixture::Parser::Specification::Specification()
    : Ancestor{"hV",
               {{"usage", ::tunitas::application::options::argument::NO, ::tunitas::application::options::indicator::Code::CHR_h},
                {"version", ::tunitas::application::options::argument::NO, ::tunitas::application::options::indicator::Code::CHR_V}}}
  { }
}
#endiv
