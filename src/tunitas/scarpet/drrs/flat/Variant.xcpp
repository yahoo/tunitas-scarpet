// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
#divert <fpp>
#import std.variant
#import tunitas.scarpet.drrs.flat.Record
#include <hpp/tunitas.scarpet.dns.type.constants> // need those dns constants to name the Record<...> specializations
namespace tunitas::scarpet::drrs::flat {
  //
  // The record (resource record) on a single row in the flat (a container which is minimal { array, deque, list, vector })
  //
  // It's container of variants (std::variant of all the possible resource records that we care about)
  //
  // The class is more more less "private to Flat" and is expected to be operated only thereby.
  //
  // Usage:
  //
  //   for (auto const &variant : flat) {
  //      auto const visitor = Visitor{[](Record<DAPTR> const &) { ... },
  //                                   [](Record<NAPTR> const &) { ... },
  //                                   ...and so on ... };
  //      std::visit(visitor, variant);
  //   }
  //
  using namespace dns::type::constants;
  using Variant = std::variant<Record<DAPTR>,
                               Record<NAPTR>,
                               Record<PTR>,
                               Record<SRV>,
                               Record<TXT>,
                               Record<URI>>;
}
#endiv
