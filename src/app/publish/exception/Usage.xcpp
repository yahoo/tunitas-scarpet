// This is -*- c++ -*- in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
// See the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
namespace app::publish::exception {
  //
  // The publish usage message, as an application exception
  //
  // Usage: (sic)
  //
  //   throw Usage{"program"};
  //
  // Usage: (sic)
  //
  //   try {
  //     ...
  //     throw Usage{"program"};
  //     ...
  //   } catch (exception::aspect::Quitting const &g) {
  //     g.stream() << g << '\n';
  //     return g.code();          ... equivalently ::exit(g.code());
  //   }
  //
  class [[nodiscard]] Usage;
}
#endiv
#divert <hpp>
#import app.exception.partial.Usage
class app::publish::exception::Usage final : public app::exception::partial::Usage {
  using Ancestor = app::exception::partial::Usage;
public:
  inline explicit Usage(Arguments::Name);
  inline explicit Usage(Arguments::Name, exits::Code);
private:
  static auto format(Arguments::Name NAME) -> Arguments::Message;
};
#endiv
#divert <ipp>
#import app.exits.constants
namespace app::publish::exception {
  Usage::Usage(Arguments::Name NAME) : Usage{NAME, exits::OK} { }
  Usage::Usage(Arguments::Name NAME, exits::Code code) : Ancestor{format(NAME), code} { }
}
#endiv
#divert <cpp>
#import std.ostringstream
#import app.publish.examples
namespace app::publish::exception {
  auto Usage::format(Arguments::Name NAME) -> Arguments::Message {
    std::ostringstream buf;
    buf << "Publish the DID Document (DD) into the indicated DID Document Storage Service (DDSS)."
        << '\n'
        << "\nusage: " << NAME << " [...options...]"
        << "\n"
        << "\nDID Document (DD) Options"
        << '\n'
        << "\n--did-document=FILEPATH                      where GUESS is a filepath with a '.json' or a '.zone' suffix"
        << "\n    --document=FILEPATH                      e.g. " << examples::DOCUMENT_JSON
        << "\n         --doc=FILEPATH                      or " << examples::DOCUMENT_ZONE
        << '\n'
        << "\n--did-document-json=FILEPATH                 the FILEPATH is the DID Document, it must contain DID-schema JSON"
        << "\n    --document-json=FILEPATH                 e.g. " << examples::DOCUMENT_JSON
        << "\n             --json=FILEPATH"
        << '\n'
        << "\n--did-document-zone=FILEPATH                 the FILEPATH is the DID Document, it must contain DID-schema ZONE"
        << "\n    --document-zone=FILEPATH                 e.g. " << examples::DOCUMENT_ZONE
        << "\n             --zone=FILEPATH"
        << '\n'
        << "\nDID Document Storage Service (DDSS) Options"
        << '\n'
        << "\n--did-document-storage-service=FQDN          the FQDN into which the DID document is to be installed on the name server"
        << "\n                        --ddss=FQDN          e.g. " << examples::DID_DOCUMENT_STORAGE_SERVICE_DOMAIN
        << "\n                  --did-domain=FQDN          same thing"
        << "\n                      --domain=FQDN          as such"                 
        << '\n'
        << "\nName Server (NS) Options"
        << '\n'
        << "\n--name-server-update-tsig-secret=FILEPATH    the FILEPATH contains the secret secret that allows update of the name server"
        << "\n     --name-server-update-secret=FILEPATH    e.g. " << examples::UPDATE_TSIG_PRIVATE_FILEPATH
        << "\n            --update-tsig-secret=FILEPATH    shorter"
        << "\n                 --update-secret=FILEPATH    simpler"
        << "\n                   --tsig-secret=FILEPATH    moreso"
        << "\n                        --secret=FILEPATH    simplest"
        << '\n'
        << "\n--name-server=HOSTNAME                       the name server into which the DID document will be updated"
        << "\n     --server=HOSTNAME                       this server must be a primary mater for the zone"
        << "\n         --ns=HOSTNAME                       e.g. " << examples::NAME_SERVER
        << '\n'
        << "\nGeneral Options:"
        << '\n'
        << "\n--usage, --help, -h                          emit this message, and exit"
        << "\n--version, -  V                              emit the package version, and exit"
        << "\n--dry-run, --dryrun, -y                      dry run, do not start the server"
        << "\n--warnings, --warning, -w                    emit warnings"
        << "\n--quiet, -q                                  be quiet, emit no notices or warnings"
        << "\n--verbose, -v                                be verbose (independent of --quiet)"
        << "\n--debug, -d                                  debug output (you should not need this)";
    return buf.str();
  }
}
#endiv
