// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
namespace tunitas::scarpet::application::exception {
  //
  // The aspect of an Scarpet Application exception.
  // Descendants only.
  //
  // Specification:
  //
  //   There was a problem with the application (e.g. during operations).
  //   If there was a problem with the parsing of the options as the application start,
  //      then use tunitas::scarpet::application::options::exception::Aspect
  //   This error is expected to be fatal to the application.
  //
  // Design:
  //
  //   Yes.
  //
  // Usage:
  //
  //   In the usual late-binding MI stylings (so you can see what's going on)
  //
  //   class my::Proboem : public Aspect, ...blah blah blah... {
  //     ...more...
  //   };
  //
  struct Aspect;
}
#endiv
#divert <hpp>
struct tunitas::scarpet::application::exception::Aspect {
protected:
  [[key_method]] virtual ~Aspect() = default;
public:
  Aspect() = default;
  virtual auto what() const noexcept -> char const * = 0;
};
#endiv
