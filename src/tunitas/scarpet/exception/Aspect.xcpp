// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See the LICENSE file in https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::scarpet::exception {
  //
  // The aspect of a Scarpet exception
  // Descendants only.
  // This is a mixin; it is not a complete class.
  // It allows the normal exception taxonomy to be used while at the same time offering
  // a dimension which is unique to the Tunitas Scarpet subsystem.
  //
  // Usage:
  //
  //   class my::Problem : public Aspect, public std::runtime_error {
  //   public:
  //      Problem(std::string const &reason);
  //      auto what() const noexcept -> char const * override;
  //   };
  //
  //   try {
  //     ...
  //     throw Problem{...somehow...};
  //     ...
  //   } catch (Aspect const &e) {
  //     ...complain...
  //   }
  //
  class Aspect;
}
#endiv
#divert <hpp>
class tunitas::scarpet::exception::Aspect {
protected:
  virtual ~Aspect() = default;
public:
  Aspect() = default;
  virtual auto what() const noexcept -> char const * = 0;
};
#endiv

