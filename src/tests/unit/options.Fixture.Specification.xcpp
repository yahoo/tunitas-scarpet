// This is -*- c++ -*- C++23 in the stylings of S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE for terms.
// See the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
//
// Specification - provide a descendant for the generalist one.
//
#include <hpp/tests.unit.options.Fixture>
#endiv
#divert <hpp>
#import app.options.Specification
namespace tests::unit::options {
  class Fixture::Specification : public ::app::options::Specification {
    using Ancestor = ::app::options::Specification;
  public:
    Specification();
  };
}
#endiv
#divert <cpp>
#import tunitas.application.options.argument.constants
#import tunitas.application.options.indicator.constants
namespace tests::unit::options {
  namespace oa = ::tunitas::application::options::argument;
  namespace oi = ::tunitas::application::options::indicator;
  Fixture::Specification::Specification()
    : Ancestor{":hVwqvd",
               {{"usage", oa::NO, oi::USAGE_SUBCOMMAND},
                {"help", oa::NO, oi::USAGE_SUBCOMMAND},
                {"version", oa::NO, oi::VERSION_SUBCOMMAND},
                {"warning", oa::NO, oi::WARNING_MODE},
                {"warnings", oa::NO, oi::WARNING_MODE},
                {"quiet", oa::NO, oi::QUIET_MODE},
                {"verbose", oa::NO, oi::VERBOSE_MODE},
                {"debug", oa::NO, oi::DEBUG_MODE},
                {"dry-run", oa::NO, oi::DRY_RUN_MODE},
                {"dryrun", oa::NO, oi::DRY_RUN_MODE}}}
  { }
}
#endiv
