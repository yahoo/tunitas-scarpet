// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-scarpet/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/scarpet/tree/LICENSE
#divert <fpp>
namespace tunitas::scarpet::compiler::output {
  //
  // The list sink.
  // Messages are recorded in a list for later processing (disposal)
  //
  // Usage:
  //
  //   auto sink = output::List{};
  //   error(sink) << "bad bad bad" << end(sink);
  //   warning(sink) << "be careful now" << end(sink);
  //   notice(sink) << "no trespassing" << end(sink);
  //   verbose(sink) << "oh come on" << end(sink);
  //   debug(sink) << "it never ends" << end(sink);
  //
  class List;
}
#endiv
#divert <hpp>
#import std.list
#import tunitas.scarpet.compiler.output.Sink
class tunitas::scarpet::compiler::output::List : public Sink, public std::list<std::string> {
  struct ancestors {
    using Sink = output::Sink;
    using List = std::list<std::string>;
  };
  auto record(std::string message) -> void override;
public:
  List() = default;
};
#endiv
#divert <cpp>
namespace tunitas::scarpet::compiler::output {
  auto List::record(std::string message) -> void {
    push_back(std::move(message));
  }
}
#endiv
